{"ast":null,"code":"const state = {\n  ayantdroits: [],\n  checked: [],\n  numberItems: 0,\n  loader: 10,\n  currentColSorted: \"\",\n  currentSortType: \"\",\n  currentQuery: \"http://localhost:3000/AyantDroits\"\n};\nconst getters = {\n  allAyantdroits: state => state.ayantdroits,\n  allChecked: state => state.checked,\n  numberItems: state => state.numberItems,\n  allLoader: state => state.loader,\n  currentColSorted: state => state.currentColSorted\n};\nconst actions = {\n  async loadAyantdroits({\n    commit\n  }) {\n    commit('fetchNumberItems');\n    commit('fetchLoader', true);\n    let query = state.currentQuery + `&_limit=${state.numberItems}`;\n    const response = await fetch(query);\n    await new Promise(resolve => setTimeout(resolve, 4000));\n    const res = await response.json();\n    commit('loadAyantdroits', res);\n    commit('fetchChecked');\n    commit('fetchLoader', false);\n    commit('sortLoad');\n  },\n  sortColumn({\n    commit\n  }, field) {\n    commit('sortObjectArray', field);\n  },\n  // i want to create a function that take fields array and do filter on ayantdroits array\n  async filterAyantdroits({\n    commit\n  }, fields) {\n    let query = `http://localhost:3000/AyantDroits?`;\n    let arrayApi = ['identifiant', 'solde', 'montant_contrat'];\n    fields.forEach((field, index) => {\n      console.log(Object.values(field)[0]);\n      if (Object.values(field)[0] != '' && Object.keys(field)[0].slice(-3) == 'Min') {\n        if (Object.keys(field)[0].slice(0, -3) == 'solde') {\n          query += `${arrayApi[1]}_gte`;\n        } else {\n          query += `${arrayApi[2]}_gte`;\n        }\n        query += `=${Object.values(field)[0]}&`;\n      } else if (Object.values(field)[0] != '' && Object.keys(field)[0].slice(-3) == 'Max') {\n        if (Object.keys(field)[0].slice(0, -3) == 'solde') {\n          query += `${arrayApi[1]}_lte`;\n        } else {\n          query += `${arrayApi[2]}_lte`;\n        }\n        query += `=${Object.values(field)[0]}&`;\n      }\n    });\n    if (query.slice(-1) == '&' || query.slice(-1) == '?') {\n      query = query.slice(0, -1);\n    }\n    console.log(\"query = \" + query);\n    commit('fetchQuery', query);\n    commit('resetState');\n    await actions.loadAyantdroits({\n      commit\n    });\n  }\n};\nconst mutations = {\n  loadAyantdroits: (state, ayantdroits) => state.ayantdroits = ayantdroits,\n  fetchChecked: state => {\n    state.checked = [...state.checked, ...Array(50).fill(false)];\n  },\n  fetchNumberItems: state => state.numberItems += 50,\n  fetchLoader: function (state, boolLoading) {\n    if (boolLoading && state.numberItems == 50) {\n      state.loader = 10;\n    } else if (boolLoading) {\n      state.loader = 3;\n    } else {\n      state.loader = 0;\n    }\n  },\n  sortLoad: function (state) {\n    let n = 0;\n    n = state.currentSortType == 'ASC' ? n = 1 : n = -1;\n    if (state.currentSortType != \"\") {\n      state.ayantdroits.sort((a, b) => {\n        console.log(n);\n        if (a[state.currentColSorted] > b[state.currentColSorted]) {\n          return n;\n        } else if (a[state.currentColSorted] < b[state.currentColSorted]) {\n          return -n;\n        } else {\n          return 0;\n        }\n      });\n    }\n  },\n  sortObjectArray: function (state, field) {\n    if (state.currentColSorted == field) {\n      if (state.ayantdroits[0][field] < state.ayantdroits[1][field]) {\n        state.ayantdroits.sort((a, b) => {\n          if (a[field] > b[field]) {\n            return -1;\n          } else if (a[field] < b[field]) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        state.currentSortType = 'ASC';\n      } else {\n        state.ayantdroits.sort((a, b) => {\n          if (a[field] < b[field]) {\n            return -1;\n          } else if (a[field] > b[field]) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        state.currentSortType = 'DSC';\n      }\n    } else {\n      state.ayantdroits.sort((a, b) => {\n        if (a[field] < b[field]) {\n          return -1;\n        } else if (a[field] > b[field]) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      state.currentColSorted = field;\n      state.currentSortType = 'ASC';\n    }\n  },\n  fetchQuery: state => state.currentQuery = query,\n  resetState: state => {\n    state.ayantdroits = [];\n    state.checked = [];\n    state.numberItems = 0;\n    state.loader = 10;\n    state.currentColSorted = \"\";\n    state.currentSortType = \"\";\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["state","ayantdroits","checked","numberItems","loader","currentColSorted","currentSortType","currentQuery","getters","allAyantdroits","allChecked","allLoader","actions","loadAyantdroits","commit","query","response","fetch","Promise","resolve","setTimeout","res","json","sortColumn","field","filterAyantdroits","fields","arrayApi","forEach","index","console","log","Object","values","keys","slice","mutations","fetchChecked","Array","fill","fetchNumberItems","fetchLoader","boolLoading","sortLoad","n","sort","a","b","sortObjectArray","fetchQuery","resetState"],"sources":["C:/Users/33767/vueApp/vueapp/src/store/modules/table.js"],"sourcesContent":["const state = {\r\n    ayantdroits : [],\r\n    checked :  [], \r\n    numberItems : 0, \r\n    loader : 10,\r\n    currentColSorted : \"\",\r\n    currentSortType :\"\",\r\n    currentQuery: \"http://localhost:3000/AyantDroits\"\r\n    \r\n}; \r\n\r\nconst getters  ={\r\n    allAyantdroits : (state) => state.ayantdroits,\r\n    allChecked : (state) => state.checked,\r\n    numberItems : (state) => state.numberItems,\r\n    allLoader : (state) => state.loader,\r\n    currentColSorted : (state) => state.currentColSorted\r\n\r\n};\r\n\r\nconst actions = {\r\n    async loadAyantdroits({commit}){\r\n        commit('fetchNumberItems')\r\n        commit('fetchLoader', true)\r\n        let query = state.currentQuery + `&_limit=${state.numberItems}`\r\n        const response = await fetch(query);\r\n        await new Promise(resolve => setTimeout(resolve, 4000));\r\n        const res = await response.json()\r\n        commit('loadAyantdroits', res)\r\n        commit('fetchChecked')\r\n        commit('fetchLoader', false)\r\n        commit('sortLoad')\r\n    }, \r\n\r\n\r\n    sortColumn({commit}, field){\r\n      commit('sortObjectArray', field)\r\n    }, \r\n    // i want to create a function that take fields array and do filter on ayantdroits array\r\n    async filterAyantdroits({commit}, fields){\r\n       let query = `http://localhost:3000/AyantDroits?`\r\n       let arrayApi = ['identifiant', 'solde', 'montant_contrat']\r\n         fields.forEach((field, index) => {\r\n            console.log(Object.values(field)[0])\r\n            if(Object.values(field)[0] != '' && Object.keys(field)[0].slice(-3) == 'Min'  ){\r\n                if(Object.keys(field)[0].slice(0, -3) == 'solde')\r\n                {\r\n                    query += `${arrayApi[1]}_gte`\r\n                }else{\r\n                    query += `${arrayApi[2]}_gte`\r\n                }\r\n                query += `=${Object.values(field)[0]}&`\r\n            }else if(Object.values(field)[0] != '' && Object.keys(field)[0].slice(-3) == 'Max'  ){\r\n                if(Object.keys(field)[0].slice(0, -3) == 'solde')\r\n                {\r\n                    query += `${arrayApi[1]}_lte`\r\n                }else{\r\n                    query += `${arrayApi[2]}_lte`\r\n                }\r\n                query += `=${Object.values(field)[0]}&`\r\n            }\r\n        } \r\n        \r\n        )\r\n        if(query.slice(-1) == '&' || query.slice(-1) == '?'){\r\n            query = query.slice(0, -1)\r\n        }\r\n        console.log(\"query = \" + query)\r\n        commit('fetchQuery', query)\r\n        commit('resetState')\r\n        await actions.loadAyantdroits({commit})     \r\n    }\r\n  \r\n};\r\n\r\nconst mutations = {\r\n    loadAyantdroits : (state, ayantdroits) => state.ayantdroits = ayantdroits, \r\n    fetchChecked : (state) => { \r\n            state.checked = [...state.checked,...Array(50).fill(false)]\r\n        \r\n    },\r\n    fetchNumberItems : (state) => state.numberItems  += 50,\r\n    fetchLoader : function(state, boolLoading) {\r\n        if(boolLoading &&state.numberItems == 50){\r\n            state.loader = 10\r\n        }else if(boolLoading){\r\n            state.loader = 3\r\n        }else{\r\n            state.loader = 0\r\n        }\r\n    }, \r\n    sortLoad : function(state){\r\n        let n= 0\r\n        n = state.currentSortType == 'ASC' ? n= 1 : n = -1\r\n        if(state.currentSortType != \"\"){  \r\n            state.ayantdroits.sort((a, b) => {  \r\n                console.log(n) \r\n                if(a[state.currentColSorted] > b[state.currentColSorted]){\r\n                    return n\r\n                }else if(a[state.currentColSorted] < b[state.currentColSorted]){\r\n                    return -n\r\n                }else{\r\n                    return 0\r\n                }\r\n            })\r\n            \r\n        }\r\n    },\r\n    sortObjectArray : function(state, field) {\r\n        if(state.currentColSorted == field){\r\n            if(state.ayantdroits[0][field] < state.ayantdroits[1][field]){\r\n                state.ayantdroits.sort((a, b) => {\r\n            \r\n                    if(a[field] > b[field]){\r\n                        return -1\r\n                    }else if(a[field] < b[field]){\r\n                        return 1\r\n                    }else{\r\n                        return 0\r\n                    }\r\n                })\r\n                state.currentSortType = 'ASC'\r\n            }else{\r\n                state.ayantdroits.sort((a, b) => {\r\n            \r\n                    if(a[field] < b[field]){\r\n                        return -1\r\n                    }else if(a[field] > b[field]){\r\n                        return 1\r\n                    }else{\r\n                        return 0\r\n                    }\r\n                })\r\n                state.currentSortType = 'DSC'\r\n            }\r\n        }else{\r\n            state.ayantdroits.sort((a, b) => {\r\n            \r\n                if(a[field] < b[field]){\r\n                    return -1\r\n                }else if(a[field] > b[field]){\r\n                    return 1\r\n                }else{\r\n                    return 0\r\n                }\r\n            })\r\n\r\n            state.currentColSorted = field\r\n            state.currentSortType =  'ASC'\r\n        }\r\n       \r\n    }, \r\n    fetchQuery : (state) => state.currentQuery = query, \r\n    resetState : (state) => {\r\n        state.ayantdroits = []\r\n        state.checked =  []\r\n        state.numberItems = 0\r\n        state.loader = 10\r\n        state.currentColSorted = \"\"\r\n        state.currentSortType = \"\"\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    state, \r\n    getters, \r\n    actions, \r\n    mutations, \r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}