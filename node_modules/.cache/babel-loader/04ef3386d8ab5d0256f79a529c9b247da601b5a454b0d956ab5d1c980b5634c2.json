{"ast":null,"code":"// i want functions that return error when filters are not valid\n\n// i want to create a function that take contratMin and contratMax and return error if contratMin > contratMax\n\nfunction isErrors(fields) {\n  let errors = '';\n  console.log(fields);\n  if (fields[1].soldeMin > fields[2].soldeMax && (fields[1].soldeMin != '' || fields[2].soldeMax != '')) {\n    errors += 'le solde min. ne peut pas être superieur au solde max.';\n  }\n  if (fields[3].contratMin > fields[4].contratMax && (fields[3].contratMin != '' || fields[4].contratMax != '')) {\n    if (errors != '') {\n      errors += ' and ';\n    }\n    errors += 'le contrat min. ne peut pas être superieur au contrat max.';\n  }\n  return errors ? errors : false;\n}\n\n// i want to create a function that take soldeMin and soldeMax and return error if soldeMin > soldeMax\n\nexport { isErrors };","map":{"version":3,"names":["isErrors","fields","errors","console","log","soldeMin","soldeMax","contratMin","contratMax"],"sources":["C:/Users/33767/vueApp/vueapp/src/helpers/errors.js"],"sourcesContent":["// i want functions that return error when filters are not valid\r\n\r\n// i want to create a function that take contratMin and contratMax and return error if contratMin > contratMax\r\n\r\nfunction isErrors(fields){\r\n        let errors =''\r\n        console.log(fields)\r\n        if ((fields[1].soldeMin > fields[2].soldeMax ) && (fields[1].soldeMin != '' || fields[2].soldeMax != '')) {\r\n            errors += 'le solde min. ne peut pas être superieur au solde max.';\r\n           \r\n        } \r\n        if (fields[3].contratMin > fields[4].contratMax && (fields[3].contratMin != '' || fields[4].contratMax != '')) {\r\n            if(errors != ''){\r\n                errors += ' and '\r\n            }\r\n\r\n            errors += 'le contrat min. ne peut pas être superieur au contrat max.';\r\n        }\r\n        return errors ? errors : false;\r\n    }\r\n\r\n\r\n// i want to create a function that take soldeMin and soldeMax and return error if soldeMin > soldeMax\r\n\r\nexport  { isErrors}"],"mappings":"AAAA;;AAEA;;AAEA,SAASA,QAAQ,CAACC,MAAM,EAAC;EACjB,IAAIC,MAAM,GAAE,EAAE;EACdC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnB,IAAKA,MAAM,CAAC,CAAC,CAAC,CAACI,QAAQ,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAACK,QAAQ,KAAOL,MAAM,CAAC,CAAC,CAAC,CAACI,QAAQ,IAAI,EAAE,IAAIJ,MAAM,CAAC,CAAC,CAAC,CAACK,QAAQ,IAAI,EAAE,CAAC,EAAE;IACtGJ,MAAM,IAAI,wDAAwD;EAEtE;EACA,IAAID,MAAM,CAAC,CAAC,CAAC,CAACM,UAAU,GAAGN,MAAM,CAAC,CAAC,CAAC,CAACO,UAAU,KAAKP,MAAM,CAAC,CAAC,CAAC,CAACM,UAAU,IAAI,EAAE,IAAIN,MAAM,CAAC,CAAC,CAAC,CAACO,UAAU,IAAI,EAAE,CAAC,EAAE;IAC3G,IAAGN,MAAM,IAAI,EAAE,EAAC;MACZA,MAAM,IAAI,OAAO;IACrB;IAEAA,MAAM,IAAI,4DAA4D;EAC1E;EACA,OAAOA,MAAM,GAAGA,MAAM,GAAG,KAAK;AAClC;;AAGJ;;AAEA,SAAUF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}