{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"Table\",\n  computed: {\n    ...mapGetters(['allAyantdroits', 'allChecked', 'numberItems', 'allLoader', 'isFiltering', 'isLoading'])\n  },\n  data() {\n    return {\n      headerChecked: false\n    };\n  },\n  methods: {\n    ...mapActions(['loadAyantdroits', 'sortColumn']),\n    onClick(id) {\n      console.log('check');\n      this.allChecked[id] = !this.allChecked[id];\n    },\n    getChecked() {\n      return this.allAyantdroits.length;\n    },\n    changeAllCheckedBox() {\n      console.log(this.allChecked);\n      if (this.allChecked.every(element => element === false)) {\n        this.headerChecked = true;\n        this.allChecked.fill(true);\n      } else {\n        this.headerChecked = false;\n        this.allChecked.fill(false);\n      }\n    },\n    handleScroll() {\n      if (document.documentElement.offsetHeight <= document.documentElement.clientHeight) {\n        this.loadAyantdroits();\n      } else {\n        let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= document.documentElement.offsetHeight - 150;\n        if (bottomOfWindow && !this.isFiltering && !this.isLoading) {\n          this.loadAyantdroits();\n        }\n      }\n    }\n  },\n  created() {\n    if (!this.isFiltering && !this.isLoading) {\n      this.loadAyantdroits();\n    }\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  unmounted() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n};","map":{"version":3,"mappings":"AAuFA,SAAQA,UAAU,EAAEC,UAAU,QAAO,MAAM;AAC3C,eAAe;EACXC,IAAG,EAAI,OAAO;EACdC,QAAO,EAAI;IACP,GAAGH,UAAU,CAAC,CAAC,gBAAgB,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC;EAE1G,CAAC;EACDI,IAAI,GAAE;IACF,OAAO;MACHC,aAAY,EAAI;IACpB;EACJ,CAAC;EACDC,OAAM,EAAI;IACN,GAAGL,UAAU,CAAC,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;IAGhDM,OAAO,CAACC,EAAE,EAAC;MACXC,OAAO,CAACC,GAAG,CAAC,OAAO;MAClB,IAAI,CAACC,UAAU,CAACH,EAAE,IAAI,CAAC,IAAI,CAACG,UAAU,CAACH,EAAE;IAC1C,CAAC;IACDI,UAAU,GAAE;MACP,OAAO,IAAI,CAACC,cAAc,CAACC,MAAK;IACrC,CAAC;IAEAC,mBAAmB,GAAE;MAClBN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU;MAC9B,IAAG,IAAI,CAACA,UAAU,CAACK,KAAK,CAACC,OAAM,IAAKA,OAAM,KAAM,KAAK,CAAC,EAAC;QACpD,IAAI,CAACZ,aAAY,GAAI,IAAG;QACtB,IAAI,CAACM,UAAU,CAACO,IAAI,CAAC,IAAI;MAC9B,CAAC,MAAI;QACF,IAAI,CAACb,aAAY,GAAI,KAAI;QACvB,IAAI,CAACM,UAAU,CAACO,IAAI,CAAC,KAAK;MAC/B;IACD,CAAC;IACFC,YAAY,GAAG;MACpB,IAAIC,QAAQ,CAACC,eAAe,CAACC,YAAW,IAAKF,QAAQ,CAACC,eAAe,CAACE,YAAY,EAAE;QAClF,IAAI,CAACC,eAAe,EAAE;MACxB,OAAO;QACL,IAAIC,cAAa,GAAIL,QAAQ,CAACC,eAAe,CAACK,SAAQ,GAAIC,MAAM,CAACC,WAAU,IAAKR,QAAQ,CAACC,eAAe,CAACC,YAAW,GAAI,GAAG;QAC3H,IAAIG,cAAa,IAAK,CAAC,IAAI,CAACI,WAAU,IAAK,CAAC,IAAI,CAACC,SAAS,EAAE;UAC1D,IAAI,CAACN,eAAe,EAAE;QACxB;MACF;IACF;EAKI,CAAC;EAEDO,OAAO,GAAE;IACL,IAAG,CAAC,IAAI,CAACF,WAAU,IAAK,CAAC,IAAI,CAACC,SAAS,EAAC;MACpC,IAAI,CAACN,eAAe,EAAC;IACzB;IACJG,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACb,YAAY;EACnD,CAAC;EACDc,SAAS,GAAE;IACNN,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACf,YAAY;EAC3D;AAGJ","names":["mapGetters","mapActions","name","computed","data","headerChecked","methods","onClick","id","console","log","allChecked","getChecked","allAyantdroits","length","changeAllCheckedBox","every","element","fill","handleScroll","document","documentElement","offsetHeight","clientHeight","loadAyantdroits","bottomOfWindow","scrollTop","window","innerHeight","isFiltering","isLoading","created","addEventListener","unmounted","removeEventListener"],"sourceRoot":"","sources":["C:\\Users\\33767\\vueApp\\vueapp\\src\\components\\Table.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <table>\r\n            <tr>\r\n                <th class =\"header-cell\" >\r\n                <img @click= \"changeAllCheckedBox\" class = \"svg\" :src = \"this.headerChecked == true ? require('../assets/svg/box-checked.svg') : require('../assets/svg/box.svg')\" alt = \"\">\r\n                </th>\r\n                <th  class =\"header-cell\" >Nom \r\n                <img class = \"svg svg-pointed\" @click = \"sortColumn('nom')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n                </th>\r\n           \r\n                <th class =\"header-cell\" >Prenom\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('prenom')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n          \r\n                <th  class =\"header-cell\" >Solde releve N-1\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('solde_n_1')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n          \r\n                <th class =\"header-cell\" >Montant des contrats\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('montant_contrat')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n         \r\n                <th   class =\"header-cell\" >Solde\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('solde')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n                 <th class =\"header-cell\" >\r\n            \r\n                </th>\r\n            </tr>\r\n               <tr   v-for= \"ayantdroit in allAyantdroits\"  :key=\"ayantdroit.id\">\r\n             <td  class =\"cell box\" >\r\n                <img v-on:click=\"onClick(ayantdroit.id)\"  class = \"svg\" v-bind:src = \"this.allChecked[ayantdroit.id] == true ? require('../assets/svg/box-checked.svg') : require('../assets/svg/box.svg')\" alt = \"\">\r\n                </td>\r\n                <td class = \"cell\">\r\n                    {{ayantdroit.nom}}\r\n                </td>\r\n                <td class =\"cell\" >{{ayantdroit.prenom}}</td>\r\n            \r\n                <td class =\"cell\" >{{ayantdroit.solde_n_1}}</td>\r\n\r\n                <td class =\"cell\" >{{ayantdroit.montant_contrat}}</td>\r\n        \r\n                <td class =\"cell\" >{{ayantdroit.solde}}</td>\r\n          \r\n                 <td class =\"cell box\" >\r\n                <img class = \"svg\" src = \"../assets/svg/arrow-left-table.svg\" alt = \"\">\r\n                </td>\r\n            </tr>\r\n               <tr v-for= \"n in allLoader\" :key = \"n\"   >\r\n             <td  class =\"cell box\" >\r\n                 <img  class = \"svg\" src = \"../assets/svg/box.svg\" alt = \"\">\r\n                    </td>\r\n                <td class = \"cell\">\r\n                    <div class=\"loader\"></div>\r\n                      </td>\r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n            \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n        \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n          \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n\r\n               \r\n                 <td class =\"cell box\" >\r\n                     <img class = \"svg\" src = \"../assets/svg/arrow-left-table.svg\" alt = \"\">\r\n             \r\n                     </td>\r\n            </tr>\r\n\r\n               \r\n        </table>\r\n        \r\n     \r\n        \r\n\r\n       \r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from 'vuex';\r\nexport default {\r\n    name : \"Table\", \r\n    computed : {\r\n        ...mapGetters(['allAyantdroits', 'allChecked', 'numberItems', 'allLoader', 'isFiltering', 'isLoading']), \r\n       \r\n    },\r\n    data(){\r\n        return {\r\n            headerChecked : false, \r\n        }\r\n    },\r\n    methods : {\r\n        ...mapActions(['loadAyantdroits', 'sortColumn']),\r\n        \r\n        \r\n        onClick(id){\r\n        console.log('check')\r\n         this.allChecked[id] = !this.allChecked[id]\r\n        }, \r\n        getChecked(){\r\n             return this.allAyantdroits.length\r\n        },\r\n        \r\n         changeAllCheckedBox(){\r\n            console.log(this.allChecked)\r\n         if(this.allChecked.every(element => element === false)){\r\n            this.headerChecked = true\r\n              this.allChecked.fill(true)\r\n         }else{\r\n            this.headerChecked = false\r\n              this.allChecked.fill(false)\r\n         }\r\n        }, \r\n       handleScroll() {\r\n  if (document.documentElement.offsetHeight <= document.documentElement.clientHeight) {\r\n    this.loadAyantdroits();\r\n  } else {\r\n    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= document.documentElement.offsetHeight - 150;\r\n    if (bottomOfWindow && !this.isFiltering && !this.isLoading) {\r\n      this.loadAyantdroits();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n    },\r\n  \r\n    created(){  \r\n        if(!this.isFiltering && !this.isLoading){\r\n            this.loadAyantdroits()\r\n        }\r\n    window.addEventListener('scroll', this.handleScroll)\r\n    }, \r\n    unmounted(){\r\n         window.removeEventListener('scroll', this.handleScroll)\r\n    }\r\n    \r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.svg {\r\n    margin-left: 10px;\r\n}\r\n * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n \r\n.header-cell{\r\n    \r\n    padding: 10px 40px;\r\n    font-family: Inter, sans-serif;\r\n    font-size: 9px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    text-align: left;\r\n   \r\n}\r\n\r\n\r\n\r\n.cell {\r\n  \r\n    padding: 15px 40px;\r\n    font-family: Inter, sans-serif;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    background-color: white;\r\n    text-align: left;\r\n}\r\n\r\ntr:hover td{\r\n    background-color: #32b2e3;    /*#ebeefc */\r\n    cursor: pointer;\r\n}\r\n\r\n\r\ntable {\r\n    \r\n    border-spacing: 0 3px;\r\n    margin-top: 40px;\r\n\r\n}\r\n\r\n.loader{\r\n    background-color: #ededed;\r\n    height: 18px;\r\n    width: 100%;\r\n    border-radius: 6px;\r\n\r\n}\r\n\r\ntd .loader {\r\n    background-color: #ededed;\r\n    background: linear-gradient(100deg, \r\n                                rgba(255, 255, 255, 0) 40%,\r\n                                rgba(255, 255, 255, .5) 50%,\r\n                                rgba(255, 255, 255, 0) 60%) #ededed;\r\n    background-size: 200% 100%;\r\n    background-position-x: 180%;\r\n    animation: 1s loading ease-in-out infinite;\r\n}\r\n\r\n@keyframes loading{\r\n    to {\r\n        background-position-x: -30%;\r\n    }\r\n\r\n}\r\n\r\n.svg-pointed{\r\ncursor: pointer\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}