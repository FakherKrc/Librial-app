{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: \"Table\",\n  computed: {\n    ...mapGetters(['allAyantdroits', 'allChecked', 'numberItems', 'allLoader', 'isFiltering', 'isLoading'])\n  },\n  data() {\n    return {\n      headerChecked: false\n    };\n  },\n  methods: {\n    ...mapActions(['loadAyantdroits', 'sortColumn']),\n    onClick(id) {\n      this.allChecked.set(id, !this.allChecked.get(id));\n    },\n    changeAllCheckedBox() {\n      if ([...this.allChecked.values()].every(element => element === false)) {\n        this.headerChecked = true;\n        this.allChecked.forEach((value, key) => this.allChecked.set(key, true));\n      } else {\n        this.headerChecked = false;\n        this.allChecked.forEach((value, key) => this.allChecked.set(key, false));\n      }\n    },\n    handleScroll() {\n      let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= document.documentElement.offsetHeight - 150;\n      if (bottomOfWindow && !this.isFiltering && !this.isLoading) {\n        this.loadAyantdroits();\n      }\n    }\n  },\n  created() {\n    if (!this.isFiltering && !this.isLoading) {\n      this.loadAyantdroits();\n    }\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  unmounted() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n};","map":{"version":3,"mappings":"AAuFA,SAAQA,UAAU,EAAEC,UAAU,QAAO,MAAM;AAC3C,eAAe;EACXC,IAAG,EAAI,OAAO;EACdC,QAAO,EAAI;IACP,GAAGH,UAAU,CAAC,CAAC,gBAAgB,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC;EAE1G,CAAC;EACDI,IAAI,GAAE;IACF,OAAO;MACHC,aAAY,EAAI;IACpB;EACJ,CAAC;EACDC,OAAM,EAAI;IACN,GAAGL,UAAU,CAAC,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;IAGhDM,OAAO,CAACC,EAAE,EAAC;MACX,IAAI,CAACC,UAAU,CAACC,GAAG,CAACF,EAAE,EAAE,CAAC,IAAI,CAACC,UAAU,CAACE,GAAG,CAACH,EAAE,CAAC;IAChD,CAAC;IACAI,mBAAmB,GAAG;MACvB,IAAI,CAAC,GAAG,IAAI,CAACH,UAAU,CAACI,MAAM,EAAE,CAAC,CAACC,KAAK,CAACC,OAAM,IAAKA,OAAM,KAAM,KAAK,CAAC,EAAE;QAClE,IAAI,CAACV,aAAY,GAAI,IAAI;QACzB,IAAI,CAACI,UAAU,CAACO,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK,IAAI,CAACT,UAAU,CAACC,GAAG,CAACQ,GAAG,EAAE,IAAI,CAAC,CAAC;MAC/E,OAAO;QACH,IAAI,CAACb,aAAY,GAAI,KAAK;QACnB,IAAI,CAACI,UAAU,CAACO,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK,IAAI,CAACT,UAAU,CAACC,GAAG,CAACQ,GAAG,EAAE,KAAK,CAAC,CAAC;MACtF;IACF,CAAC;IACOC,YAAY,GAAG;MAEnB,IAAIC,cAAa,GAAIC,QAAQ,CAACC,eAAe,CAACC,SAAQ,GAAIC,MAAM,CAACC,WAAU,IAAKJ,QAAQ,CAACC,eAAe,CAACI,YAAW,GAAI,GAAG;MAC3H,IAAIN,cAAa,IAAK,CAAC,IAAI,CAACO,WAAU,IAAK,CAAC,IAAI,CAACC,SAAS,EAAE;QAC1D,IAAI,CAACC,eAAe,EAAE;MACxB;IAEJ;EACI,CAAC;EAEDC,OAAO,GAAE;IACL,IAAG,CAAC,IAAI,CAACH,WAAU,IAAK,CAAC,IAAI,CAACC,SAAS,EAAC;MACpC,IAAI,CAACC,eAAe,EAAC;IACzB;IAEJL,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACZ,YAAY;EACnD,CAAC;EACDa,SAAS,GAAE;IACNR,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACd,YAAY;EAC3D;AAIJ","names":["mapGetters","mapActions","name","computed","data","headerChecked","methods","onClick","id","allChecked","set","get","changeAllCheckedBox","values","every","element","forEach","value","key","handleScroll","bottomOfWindow","document","documentElement","scrollTop","window","innerHeight","offsetHeight","isFiltering","isLoading","loadAyantdroits","created","addEventListener","unmounted","removeEventListener"],"sourceRoot":"","sources":["C:\\Users\\33767\\vueApp\\vueapp\\src\\components\\Table.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <table>\r\n            <tr>\r\n                <th class =\"header-cell\" >\r\n                <img @click= \"changeAllCheckedBox\" class = \"svg\" :src = \"this.headerChecked == true ? require('../assets/svg/box-checked.svg') : require('../assets/svg/box.svg')\" alt = \"\">\r\n                </th>\r\n                <th  class =\"header-cell\" colspan=\"2\" >Nom \r\n                <img class = \"svg svg-pointed\" @click = \"sortColumn('nom')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n                </th>\r\n           \r\n                <th class =\"header-cell\" colspan=\"2\" >Prenom\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('prenom')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n          \r\n                <th  class =\"header-cell\" >Solde releve N-1\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('solde_n_1')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n          \r\n                <th class =\"header-cell\" >Montant des contrats\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('montant_contrat')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n         \r\n                <th   class =\"header-cell\" >Solde\r\n                      <img class = \"svg svg-pointed\" @click = \"sortColumn('solde')\" src = \"../assets/svg/sort.svg\" alt = \"\">\r\n              \r\n                </th>\r\n                 <th class =\"header-cell\" >\r\n            \r\n                </th>\r\n            </tr>\r\n               <tr   v-for= \"ayantdroit in allAyantdroits\"  :key=\"ayantdroit.id\">\r\n             <td  class =\"cell box\" >\r\n                <img v-on:click=\"onClick(ayantdroit.id)\"  class = \"svg\" v-bind:src = \"this.allChecked.get(ayantdroit.id) == true ? require('../assets/svg/box-checked.svg') : require('../assets/svg/box.svg')\" alt = \"\">\r\n                </td>\r\n                <td class = \"cell\">\r\n                    {{ayantdroit.nom}}\r\n                </td>\r\n                <td class =\"cell\" >{{ayantdroit.prenom}}</td>\r\n            \r\n                <td class =\"cell\" >{{ayantdroit.solde_n_1}}</td>\r\n\r\n                <td class =\"cell\" >{{ayantdroit.montant_contrat}}</td>\r\n        \r\n                <td class =\"cell\" >{{ayantdroit.solde}}</td>\r\n          \r\n                 <td class =\"cell box\" >\r\n                <img class = \"svg\" src = \"../assets/svg/arrow-left-table.svg\" alt = \"\">\r\n                </td>\r\n            </tr>\r\n               <tr v-for= \"n in allLoader\" :key = \"n\"   >\r\n             <td  class =\"cell box\" >\r\n                 <img  class = \"svg\" src = \"../assets/svg/box.svg\" alt = \"\">\r\n                    </td>\r\n                <td class = \"cell\">\r\n                    <div class=\"loader\"></div>\r\n                      </td>\r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n            \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n        \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n          \r\n                <td class =\"cell\" > <div class=\"loader\"></div></td>\r\n\r\n               \r\n                 <td class =\"cell box\" >\r\n                     <img class = \"svg\" src = \"../assets/svg/arrow-left-table.svg\" alt = \"\">\r\n             \r\n                     </td>\r\n            </tr>\r\n\r\n               \r\n        </table>\r\n        \r\n     \r\n        \r\n\r\n       \r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapGetters, mapActions} from 'vuex';\r\nexport default {\r\n    name : \"Table\", \r\n    computed : {\r\n        ...mapGetters(['allAyantdroits', 'allChecked', 'numberItems', 'allLoader', 'isFiltering', 'isLoading']), \r\n       \r\n    },\r\n    data(){\r\n        return {\r\n            headerChecked : false, \r\n        }\r\n    },\r\n    methods : {\r\n        ...mapActions(['loadAyantdroits', 'sortColumn']),\r\n        \r\n        \r\n        onClick(id){\r\n        this.allChecked.set(id, !this.allChecked.get(id))\r\n        },\r\n         changeAllCheckedBox() {\r\n        if ([...this.allChecked.values()].every(element => element === false)) {\r\n             this.headerChecked = true;\r\n             this.allChecked.forEach((value, key) => this.allChecked.set(key, true));\r\n     } else {\r\n         this.headerChecked = false;\r\n                this.allChecked.forEach((value, key) => this.allChecked.set(key, false));\r\n  }     \r\n}, \r\n        handleScroll() {\r\n\r\n    let bottomOfWindow = document.documentElement.scrollTop + window.innerHeight >= document.documentElement.offsetHeight - 150;\r\n    if (bottomOfWindow && !this.isFiltering && !this.isLoading) {\r\n      this.loadAyantdroits();\r\n    }\r\n  \r\n}\r\n    },\r\n  \r\n    created(){  \r\n        if(!this.isFiltering && !this.isLoading){\r\n            this.loadAyantdroits()\r\n        }\r\n    \r\n    window.addEventListener('scroll', this.handleScroll)\r\n    }, \r\n    unmounted(){\r\n         window.removeEventListener('scroll', this.handleScroll)\r\n    }, \r\n\r\n    \r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n*{\r\n    box-sizing: border-box;\r\n}\r\n\r\n.svg {\r\n    margin-left: 10px;\r\n}\r\n * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n \r\n.header-cell{\r\n    \r\n    padding: 10px 15px;\r\n    font-family: Inter, sans-serif;\r\n    font-size: 9px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    text-align: left;\r\n   \r\n}\r\n\r\n\r\n\r\n.cell {\r\n  \r\n    padding: 15px 15px;\r\n    font-family: Inter, sans-serif;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    background-color: white;\r\n    text-align: left;\r\n}\r\n\r\ntr:hover td{\r\n    background-color: #32b2e3;    /*#ebeefc */\r\n    cursor: pointer;\r\n}\r\n\r\n\r\ntable {\r\n    \r\n    border-spacing: 0 3px;\r\n    margin-top: 15px;\r\n    width: 100%;\r\n\r\n}\r\n\r\n.loader{\r\n    background-color: #ededed;\r\n    height: 18px;\r\n    width: 100%;\r\n    border-radius: 6px;\r\n\r\n}\r\n\r\ntd .loader {\r\n    background-color: #ededed;\r\n    background: linear-gradient(100deg, \r\n                                rgba(255, 255, 255, 0) 40%,\r\n                                rgba(255, 255, 255, .5) 50%,\r\n                                rgba(255, 255, 255, 0) 60%) #ededed;\r\n    background-size: 200% 100%;\r\n    background-position-x: 180%;\r\n    animation: 1s loading ease-in-out infinite;\r\n}\r\n\r\n@keyframes loading{\r\n    to {\r\n        background-position-x: -30%;\r\n    }\r\n\r\n}\r\n\r\n.svg-pointed{\r\ncursor: pointer\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}